#:import re re

<MainBoxLayout>:
    canvas.before:
        Color:
            rgba: 0, 0, 0, 1
        Rectangle:
            pos: self.pos
            size: self.size
    color:
    orientation: 'horizontal'
    beacon_list: [beacon_A, beacon_B, beacon_C, beacon_D, beacon_E, beacon_F]
    BoxLayout:
        orientation: 'vertical'

        # Selecting Modules
        BoxLayout:
            orientation: 'vertical'
            ColorLabel:
                bcolor: (0, 0.58, 0.53, 1)
                text: 'Trainings Optionen'
                markup: True
                bold: True
            BoxLayout:
                orientation: 'vertical'
                StateButton:
                    text: 'Modul A'
                    module: 'A'
                    on_release: root.callback_module_select(self, beacon_A)
                StateButton:
                    text: 'Modul B'
                    module: 'B'
                    on_release: root.callback_module_select(self, beacon_B)
                StateButton:
                    text: 'Modul C'
                    module: 'C'
                    on_release: root.callback_module_select(self, beacon_C)
                StateButton:
                    text: 'Modul D'
                    module: 'D'
                    on_release: root.callback_module_select(self, beacon_D)
                StateButton:
                    text: 'Modul E'
                    module: 'E'
                    on_release: root.callback_module_select(self, beacon_E)
                StateButton:
                    text: 'Modul F'
                    module: 'F'
                    on_release: root.callback_module_select(self, beacon_F)

        # TrainingSettingsBox
        BoxLayout:
            orientation: 'vertical'
            ColorLabel:
                bcolor: (0, 0.58, 0.53, 1)
                text: 'Trainings Optionen'
                markup: True
                bold: True
            GridLayout:
                cols: 2
                orientation: 'vertical'
                Label:
                    text: 'Name:'
                NameInput:
                    id: subject_name

                Label:
                    text: 'Trainings Name:'
                NameInput:
                    id: training_name

                Label:
                    text: 'Trainingszeit (s):'
                PosFloatInput:
                    id: time_of_training
                    on_text: if not self.text == '': number_of_repetitions.text = ''

                Label:
                    text: 'Anzahl Wiederholungen:'
                PosIntInput:
                    id: number_of_repetitions
                    on_text: if not self.text == '': time_of_training.text = ''

                Label:
                    text: 'Intervallzeit (s):'
                PosFloatInput:
                    id: interval_time


        # StartTrainingBox
        BoxLayout
            orientation: 'vertical'
            ColorLabel:
                bcolor: (0, 0.58, 0.53, 1)
                text: 'Trainings Optionen'
                markup: True
                bold: True
            BoxLayout:
                orientation: 'vertical'
                Button:
                    text: 'Training Starten'
                    on_release: root.callback_start_training()
                Button:
                    text: 'Stopp'
                    on_release: root.callback_stop_training()

    BadmintonCourtBox:
        Beacon:
            id: beacon_A
            pos: (50, 50)
            max_pos: (670, 680)
            min_pos: (0, 0)
            id_text: 'A'
            alpha: 1
            id_color: (1, 0, 0)
        Beacon:
            id: beacon_B
            pos: (620, 50)
            max_pos: (670, 680)
            min_pos: (0, 0)
            id_text: 'B'
            alpha: 1
            id_color: (0, 1, 0)
        Beacon:
            id: beacon_C
            center: (70, 370)
            max_pos: (670, 680)
            min_pos: (0, 0)
            id_text: 'C'
            alpha: 1
            id_color: (0, 0, 1)
        Beacon:
            id: beacon_D
            center: (640, 370)
            max_pos: (670, 680)
            min_pos: (0, 0)
            id_text: 'D'
            alpha: 1
            id_color: (1, 1, 0)
        Beacon:
            id: beacon_E
            pos: (50, 630)
            max_pos: (670, 680)
            min_pos: (0, 0)
            id_text: 'E'
            alpha: 1
            id_color: (1, 0, 1)
        Beacon:
            id: beacon_F
            pos: (620, 630)
            max_pos: (670, 680)
            min_pos: (0, 0)
            id_text: 'F'
            alpha: 1
            id_color: (0, 1, 1)

<TrainingSettingsBox>:
    orientation: 'vertical'
    ColorLabel:
        bcolor: (0, 0.58, 0.53, 1)
        text: 'Trainings Optionen'
        markup: True
        bold: True
    GridLayout:
        cols: 2
        orientation: 'vertical'
        Label:
            text: 'Name:'
        NameInput:

        Label:
            text: 'Trainingszeit (s):'
        PosFloatInput:

        Label:
            text: 'Anzahl Wiederholungen:'
        PosIntInput:

        Label:
            text: 'Intervallzeit (s):'
        PosFloatInput:

<StartTrainingBox>:
    orientation: 'vertical'
    ColorLabel:
        bcolor: (0, 0.58, 0.53, 1)
        text: 'Trainings Optionen'
        markup: True
        bold: True
    BoxLayout:
        orientation: 'vertical'
        Button:
            text: 'Training Starten'
        Button:
            text: 'Stopp'

<BadmintonCourtBox>:
    size: (710, 720)
    size_hint_x: None
    size_hint_y: None
    Image:
        source: 'img/badminton_court.png'
        height: 720
        width: 710
        size_hint_x: None
        size_hint_y: None
        allow_stretch: False
        keep_ratio: True

<StateButton>:
    active: True
    color_deactive: (0.3, 0.3, 0.3, 1)
    color_active: (0, 1, 1, 1)
    background_color: self.color_active

<ColorLabel>
    bcolor: (0, 0, 0, 1)
    canvas.before:
        Color:
            rgba: self.bcolor
        Rectangle:
            pos: self.pos
            size: self.size

<NameInput>
    multiline: False
    pat: re.compile('[^A-Za-z0-9 _]')

<PosFloatInput>
    multiline: False
    pat: re.compile('[^0-9]')

<PosIntInput>
    multiline: False
    pat: re.compile('[^0-9]')

<Beacon>:
    max_pos: (0, 0)
    min_pos: (0, 0)
    id_text: ''
    alpha: 1
    used: True
    state: 'not_init'
    addresses: {'beacon_A': 0, 'beacon_B': 1, 'beacon_C': 2, 'beacon_D': 3, 'beacon_E': 4, 'beacon_F': 5}
    error: (False, '')
    id_color: (1, 1, 1)
    size_hint_x: None
    size_hint_y: None
    size: (40, 40)

    canvas:
        Color:
            rgb: (0, 0, 0)
            a: self.alpha
        Ellipse:
            size: (40, 40)
            pos: (0, 0)
        Color:
            a: self.alpha
            rgb: self.id_color
        Ellipse:
            size: (30, 30)
            pos: (5, 5)
        Color:
            rgb: (0, 0, 0)
            a: self.alpha
        Ellipse:
            size: (24, 24)
            pos: (8, 8)
    Label:
        text: root.id_text
        pos: (10, 10)
        size: (20, 20)
        opacity: root.alpha







